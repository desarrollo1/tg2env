# A jQuery Flot Widget
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Authors: Luke Macken <lmacken@redhat.com>

from base import jquery_js
from random import random
from tw.api import Widget, JSLink, CSSLink, js_function

flot_css = CSSLink(modname=__name__, filename='static/css/flot.css')
flot_js = JSLink(modname=__name__, filename='static/javascript/jquery.flot.js')
flot_hint_js = JSLink(modname=__name__, filename='static/javascript/jquery.flot.hint.js')
hover_intent_js = JSLink(modname=__name__, filename='static/javascript/jquery.hoverIntent.js')
excanvas_js = JSLink(modname=__name__, filename='static/javascript/excanvas.js')
jQuery = js_function('$')


class FlotWidget(Widget):
    """ An attractive plotting widget.

    Using Flot, a pure Javascript plotting library for jQuery,
    this widget produces client-side graphical plots of arbitrary datasets
    on-the-fly.

    For detailed documentation on the flot API, visit the flot project 
    homepage: http://code.google.com/p/flot
    """
    template = "genshi:tw.jquery.templates.flot"
    params = {
            "data"    : "An array of data series",
            "options" : "Plot options",
            "height"  : "The height of the graph",
            "width"   : "The width of the graph",
            "label"   : "Label for the graph",
            "id"      : "An optional ID for the graph"
    }
    javascript = [jquery_js, flot_js, excanvas_js]
    css = [flot_css]
    height = '300px'
    width = '600px'
    label = ''

    def update_params(self, d):
        super(FlotWidget, self).update_params(d)
        if not d.get('data'):
            raise ValueError, "FlotWidget must have data to graph"
        if not d.get('id'):
            d['id'] = 'flot_%s' % str(int(random() * 999))
        data = d.get('data', [])
        options = d.get('options', {})
        self.add_call(js_function('$.plot')(jQuery('#%s' % d.id), data, options))
        return d
